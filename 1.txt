Далее предоставлен уточненный алгоритм, который учитывает присвоение значения date_begin только этапам с минимальным приоритетом и минимальным приоритетом группы.

1. Выберите маршрут из таблицы "ref_route".

2. Получите список групп маршрутов, связанных с этим маршрутом, из таблицы "ref_route_structure".

3. Отсортируйте группы по их приоритету ("stgr_priority").

4. Определите минимальный приоритет группы ("min_group_priority") и минимальный приоритет этапа в минимальной группе ("min_stage_priority").

5. Найдите группы, соответствующие "min_group_priority", и в каждой из этих групп идентифицируйте этапы, соответствующие "min_stage_priority". 

6. Для каждого этапа полученного на шаге 5:
   - Если "is_for_request" = True для группы этапа, вставьте запись со значением date_begin в таблицу "relation_stage_history".
   - Если "is_for_request" = False для группы этапа, вставьте запись со значением date_begin в таблицу "relation_pass_history".

7. Когда этап успешно завершается (исходя из ваших бизнес-правил):
   - Установите date_end для этого этапа.
   - Проверьте, есть ли другие незавершенные этапы в этой группе или в других группах с тем же приоритетом.
        - Если в этой группе есть незавершенные этапы, установите date_begin для этапа с следующим минимальным приоритетом в этой группе.
        - Если все этапы в этой группе завершены, но есть другие группы с тем же приоритетом, установите date_begin для этапа с минимальным приоритетом в следующей группе.
        - Если в других группах с таким же приоритетом нет незавершенных этапов, установите date_begin для этапа с минимальным приоритетом в следующей группе с минимальным приоритетом.

8. Повторяйте шаги 7 и 8, пока все этапы всех групп не будут завершены.
